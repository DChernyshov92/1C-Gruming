
Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	УчётнаяПолитикаСрезПоследних.УчётнаяПолитика КАК УчётнаяПолитика
	               |ИЗ
	               |	РегистрСведений.УчётнаяПолитика.СрезПоследних КАК УчётнаяПолитикаСрезПоследних";
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		ТекущаяУчётнаяПолитика = Выборка.УчётнаяПолитика;
	КонецЦикла;
	
	Движения.УчётнаяПолитика.Записывать = Истина;
	Движение = Движения.УчётнаяПолитика.Добавить();
	Движение.Период = Дата;
	Движение.УчётнаяПолитика = УчётнаяПолитика;
	
	Если (ТекущаяУчётнаяПолитика = Перечисления.ВидыУчётнойПолитики.FIFO) И
		(УчётнаяПолитика = Перечисления.ВидыУчётнойПолитики.ПоСредней) Тогда
		
		Движения.ТоварыНаСкладах.Записывать = Истина;
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		               |	ТоварыНаСкладахОстатки.Номенклатура КАК Номенклатура,
		               |	ТоварыНаСкладахОстатки.Склад КАК Склад,
		               |	ТоварыНаСкладахОстатки.СрокГодности КАК СрокГодности,
		               |	ТоварыНаСкладахОстатки.КоличествоОстаток КАК КоличествоОстаток
		               |ИЗ
		               |	РегистрНакопления.ТоварыНаСкладах.Остатки(&МоментИтогов, ) КАК ТоварыНаСкладахОстатки
		               |ИТОГИ
		               |	СУММА(КоличествоОстаток)
		               |ПО
		               |	Номенклатура";
		Запрос.УстановитьПараметр("МоментИтогов", Новый Граница(МоментВремени()));
		
		Выборка = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока Выборка.Следующий() Цикл
			Движение = Движения.ТоварыНаСкладах.ДобавитьРасход();
			Движение.Период = Дата;
			ЗаполнитьЗначенияСвойств(Движение, Выборка);
			
			Движение = Движения.ТоварыНаСкладах.ДобавитьПриход();
			Движение.Период = Дата;
			ЗаполнитьЗначенияСвойств(Движение, Выборка, , "СрокГодности");
		КонецЦикла;
	ИначеЕсли (ТекущаяУчётнаяПолитика = Перечисления.ВидыУчётнойПолитики.ПоСредней) И
		(УчётнаяПолитика = Перечисления.ВидыУчётнойПолитики.FIFO) Тогда
		//?? 
	КонецЕсли;
КонецПроцедуры
