
Процедура ОбработкаПроведения(Отказ, Режим)
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	УчётнаяПолитикаСрезПоследних.УчётнаяПолитика КАК УчётнаяПолитика
	               |ИЗ
	               |	РегистрСведений.УчётнаяПолитика.СрезПоследних(&МоментВремени, ) КАК УчётнаяПолитикаСрезПоследних";
	Запрос.УстановитьПараметр("МоментВремени", Новый Граница(МоментВремени()));
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
    УчетнаяПолитика = Выборка.УчётнаяПолитика;
	ОтражатьСрокиГодности = ?(УчетнаяПолитика = Перечисления.ВидыУчётнойПолитики.FIFO, 
							Истина,
							Ложь);
	Движения.ЦеныНоменклатурыПоставщиков.Записывать = Истина;
    Движения.ТоварыНаСкладах.Записывать = Истина;
    Движения.Хозрасчетный.Записывать = Истина;
    Запрос.Текст =
    "ВЫБРАТЬ
    |	ПоступлениеТоваровТовары.Номенклатура КАК Номенклатура,
    |	ПоступлениеТоваровТовары.Цена КАК Цена,
    |	СУММА(ПоступлениеТоваровТовары.Количество) КАК Количество,
    |	СУММА(ПоступлениеТоваровТовары.Сумма) КАК Сумма,
    |	ПоступлениеТоваровТовары.СрокГодности КАК СрокГодности,
    |	ПоступлениеТоваровТовары.Номенклатура.СчетБухгалтерскогоУчета КАК СчетБухгалтерскогоУчета
    |ИЗ
    |	Документ.ПоступлениеТоваров.Товары КАК ПоступлениеТоваровТовары
    |ГДЕ
    |	ПоступлениеТоваровТовары.Ссылка = &Ссылка
    |
    |СГРУППИРОВАТЬ ПО
    |	ПоступлениеТоваровТовары.Номенклатура,
    |	ПоступлениеТоваровТовары.Цена,
    |	ПоступлениеТоваровТовары.СрокГодности,
    |	ПоступлениеТоваровТовары.Номенклатура.СчетБухгалтерскогоУчета
    |ИТОГИ
    |	МАКСИМУМ(Цена)
    |ПО
    |	Номенклатура";
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
    ВыборкаИтоги = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
    Пока ВыборкаИтоги.Следующий() Цикл
        Движение = Движения.ЦеныНоменклатурыПоставщиков.Добавить();
        Движение.Период = Дата;
        Движение.Номенклатура = ВыборкаИтоги.Номенклатура;
        Движение.Поставщик = Поставщик;
        Движение.Цена = ВыборкаИтоги.Цена; 
        Выборка = ВыборкаИтоги.Выбрать();
        Пока Выборка.Следующий() Цикл            
            Движение = Движения.ТоварыНаСкладах.Добавить();
            Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
            Движение.Период = Дата;
            Движение.Номенклатура = Выборка.Номенклатура;
            Движение.Сумма = Выборка.Сумма;
            Движение.Склад = Склад;
            Движение.Количество = Выборка.Количество;            
            Движение.СрокГодности = ?(ОтражатьСрокиГодности,
									Выборка.СрокГодности,
									"00010101");
            Движение = Движения.Хозрасчетный.Добавить();
            Движение.СчетДт = Выборка.СчетБухгалтерскогоУчета;
            Движение.СчетКт = ПланыСчетов.Хозрасчетный.РасчетыСПоставщиками;
            Движение.Период = Дата;
            Движение.Сумма = Выборка.Сумма;
            Движение.Содержание = "Отражено поступление товарно-материальных ценностей от поставщика";
            Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура] = Выборка.Номенклатура;
            Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты] = Поставщик; 
        КонецЦикла;
    КонецЦикла;
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	Если НЕ ЗначениеЗаполнено(АвторДокумента) Тогда
		АвторДокумента = ПараметрыСеанса.ТекущийПользователь;		
	КонецЕсли;
	СуммаДокумента = Товары.Итог("Сумма");
КонецПроцедуры

Функция ТекущаяУчётнаяПолитика()
	Запрос = Новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ
		         |	УчётнаяПолитикаСрезПоследних.УчётнаяПолитика КАК УчётнаяПолитика
		         |ИЗ
		         |	РегистрСведений.УчётнаяПолитика.СрезПоследних(&МоментВремени, ) КАК УчётнаяПолитикаСрезПоследних";
		
	Запрос.УстановитьПараметр("МоментВремени", Новый Граница(МоментВремени()));
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
    Возврат Выборка.УчётнаяПолитика;
КонецФункции
