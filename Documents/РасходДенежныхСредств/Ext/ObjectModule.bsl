
Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	//{{__КОНСТРУКТОР_ВВОД_НА_ОСНОВАНИИ
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПоступлениеУслуг") Тогда
		// Заполнение шапки
		АвторДокумента = ДанныеЗаполнения.АвторДокумента;
		ДоговорКонтрагента = ДанныеЗаполнения.ДоговорПоставщика;
		Комментарий = ДанныеЗаполнения.Комментарий;
		ДокументОснование = ДанныеЗаполнения.Ссылка;
		СуммаДокумента = ДанныеЗаполнения.СуммаДокумента;
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.РеализацияТоваровИУслуг") Тогда
		// Заполнение шапки
		АвторДокумента = ДанныеЗаполнения.АвторДокумента;
		Комментарий = ДанныеЗаполнения.Комментарий;
		ДокументОснование = ДанныеЗаполнения.Ссылка;
		СуммаДокумента = ДанныеЗаполнения.Сумма;
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПоступлениеТоваров") Тогда
		// Заполнение шапки
		АвторДокумента = ДанныеЗаполнения.АвторДокумента;
		ДоговорКонтрагента = ДанныеЗаполнения.ДоговорПоставщика;
		Комментарий = ДанныеЗаполнения.Комментарий;
		ДокументОснование = ДанныеЗаполнения.Ссылка;
		СуммаДокумента = ДанныеЗаполнения.СуммаДокумента;
		Получатель = ДанныеЗаполнения.Поставщик;
	КонецЕсли;
	//}}__КОНСТРУКТОР_ВВОД_НА_ОСНОВАНИИ
КонецПроцедуры

Функция ПолучитьАналитикуПроводки()    
    ОплатаПоставщику = Перечисления.ВидыОперацийРасходаДенег.ОплатаПоставщику;
    ВозвратДенегПокупателю = Перечисления.ВидыОперацийРасходаДенег.ВозвратДенегПокупателю;
    ВыдачаДенегПодотчетнику = Перечисления.ВидыОперацийРасходаДенег.ВыдачаДенегПодотчетнику;
    ВзносНаличнымиВБанк = Перечисления.ВидыОперацийРасходаДенег.ВзносНаличнымиВБанк;    
        
    СтруктураАналитики = Новый Структура;
    СтруктураАналитики.Вставить("СчетКредита", ПланыСчетов.Хозрасчетный.Касса);
    СтруктураАналитики.Вставить("СубконтоКредит", Касса);

    Если ВидОперации = ОплатаПоставщику Тогда
        СтруктураАналитики.Вставить("СчетДебета", ПланыСчетов.Хозрасчетный.РасчетыСПоставщиками);
        СтруктураАналитики.Вставить("СубконтоДебет", Получатель);
        СтруктураАналитики.Вставить("СодержаниеОперации", "Оплата поставщику наличными из кассы");
    ИначеЕсли ВидОперации = ВозвратДенегПокупателю Тогда
        СтруктураАналитики.Вставить("СчетДебета", ПланыСчетов.Хозрасчетный.РасчетыСПокупателями);    
        СтруктураАналитики.Вставить("СубконтоДебет", Получатель);
        СтруктураАналитики.Вставить("СодержаниеОперации", "Возврат покупателю наличными из кассы");
    ИначеЕсли ВидОперации = ВыдачаДенегПодотчетнику Тогда
        СтруктураАналитики.Вставить("СчетДебета", ПланыСчетов.Хозрасчетный.РасчетыСПодотчетнымиЛицами);
        СтруктураАналитики.Вставить("СубконтоДебет", Получатель);
        СтруктураАналитики.Вставить("СодержаниеОперации", "Выдача в подотчет наличных из кассы");
    ИначеЕсли ВидОперации = ВзносНаличнымиВБанк Тогда 
        СтруктураАналитики.Вставить("СчетДебета", ПланыСчетов.Хозрасчетный.РасчетныеСчета);
        СтруктураАналитики.Вставить("СубконтоДебет", РасчетныйСчет);
        СтруктураАналитики.Вставить("СодержаниеОперации", "Взнос наличными в банк");
    КонецЕсли;
    Возврат СтруктураАналитики;
КонецФункции

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	РасходДенежныхСредств.Дата КАК Период,
	|	РасходДенежныхСредств.Касса КАК БанковскийСчётКасса,
	|	РасходДенежныхСредств.СуммаДокумента КАК Сумма,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыДенежныхСредств.Наличные) КАК ТипДенежныхСредств
	|ИЗ
	|	Документ.РасходДенежныхСредств КАК РасходДенежныхСредств
	|ГДЕ
	|	РасходДенежныхСредств.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	РасходДенежныхСредств.Дата,
	|	РасходДенежныхСредств.Касса,
	|	РасходДенежныхСредств.СуммаДокумента";
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Движение = Движения.ДенежныеСредства.ДобавитьРасход();
		ЗаполнитьЗначенияСвойств(Движение, Выборка);
	КонецЦикла;
	
	Движения.ДенежныеСредства.Записывать = Истина;
	Движения.ДенежныеСредства.БлокироватьДляИзменения = Истина;
	Движения.Записать();
	//БухгалтерскиеПроводки
	АналитикаПроводки = ПолучитьАналитикуПроводки();
	Движения.Хозрасчетный.Записывать = Истина;
	Движение = Движения.Хозрасчетный.Добавить();
	Движение.СчетДт = АналитикаПроводки.СчетДебета;
	Движение.СчетКт = АналитикаПроводки.СчетКредита;
	Движение.Период = Дата;
	Движение.Сумма = СуммаДокумента;
	Движение.Содержание = АналитикаПроводки.СодержаниеОперации;
	БухгалтерскийУчет.ЗаполнитьСубконтоПоСчету(Движение.СчетДт, Движение.СубконтоДт, АналитикаПроводки.СубконтоДебет);
	БухгалтерскийУчет.ЗаполнитьСубконтоПоСчету(Движение.СчетКт, Движение.СубконтоКт, АналитикаПроводки.СубконтоКредит);
	Движения.Записать();
	//Проверка отрицательных остатков
	Запрос.Текст = "ВЫБРАТЬ
	|	ДенежныеСредстваОстатки.БанковскийСчётКасса.Представление КАК БанковскийСчётКассаПредставление,
	|	ДенежныеСредстваОстатки.СуммаОстаток КАК СуммаОстаток
	|ИЗ
	|	РегистрНакопления.ДенежныеСредства.Остатки(
	|			&МоментВремени,
	|			БанковскийСчётКасса = &Касса
	|				И ТипДенежныхСредств = ЗНАЧЕНИЕ(Перечисление.ТипыДенежныхСредств.Наличные)) КАК ДенежныеСредстваОстатки
	|ГДЕ
	|	ДенежныеСредстваОстатки.СуммаОстаток < 0";
	Запрос.УстановитьПараметр("МоментВремени", Новый Граница(МоментВремени()));
	Запрос.УстановитьПараметр("Касса", Касса);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда
		Отказ = Истина;
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = СтрШаблон("По кассе ""%1"" недостаточно денежных средств для расхода в размере %2", Выборка.БанковскийСчётКассаПредставление, Выборка.СуммаОстаток);
		Сообщение.Сообщить();
	КонецЕсли;
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	Если НЕ ЗначениеЗаполнено(АвторДокумента) Тогда
		АвторДокумента = ПараметрыСеанса.ТекущийПользователь;
	КонецЕсли;
КонецПроцедуры 

