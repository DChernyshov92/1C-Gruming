Функция ПолучитьАналитикуПроводки()    
    ОплатаПоставщику = Перечисления.ВидыОперацийСписанияСРасчетногоСчета.ОплатаПоставщику;
    ВозвратПокупателю = Перечисления.ВидыОперацийСписанияСРасчетногоСчета.ВозвратПокупателю;
    ПеречислениеПодотчетномуЛицу = Перечисления.ВидыОперацийСписанияСРасчетногоСчета.ПеречислениеПодотчетномуЛицу;
    ПеречислениеЗаработнойПлаты = Перечисления.ВидыОперацийСписанияСРасчетногоСчета.ПеречислениеЗаработнойПлаты;    
    СтруктураАналитики = Новый Структура;
    СтруктураАналитики.Вставить("СчетКредита", ПланыСчетов.Хозрасчетный.РассчетныеСчета);
    СтруктураАналитики.Вставить("СубконтоКредит", РасчетныйСчет);
    Если ВидОперации = ОплатаПоставщику Тогда
        СтруктураАналитики.Вставить("СчетДебета", ПланыСчетов.Хозрасчетный.РасчетыСПоставщиками);
        СтруктураАналитики.Вставить("СубконтоДебет", Получатель);
        СтруктураАналитики.Вставить("СодержаниеОперации", "Оплата поставщику с расчетного счета");
    ИначеЕсли ВидОперации = ВозвратПокупателю Тогда
        СтруктураАналитики.Вставить("СчетДебета", ПланыСчетов.Хозрасчетный.РасчетыСПокупателями);    
        СтруктураАналитики.Вставить("СубконтоДебет", Получатель);
        СтруктураАналитики.Вставить("СодержаниеОперации", "Возврат средств покупателю с расчетного счета");
    ИначеЕсли ВидОперации = ПеречислениеПодотчетномуЛицу Тогда 
        СтруктураАналитики.Вставить("СчетДебета", ПланыСчетов.Хозрасчетный.РасчетыСПодотчетнымиЛицами);
        СтруктураАналитики.Вставить("СубконтоДебет", Получатель);
        СтруктураАналитики.Вставить("СодержаниеОперации", "Перечисление подотченику с расчетного счета");
    ИначеЕсли ВидОперации = ПеречислениеЗаработнойПлаты Тогда
        СтруктураАналитики.Вставить("СчетДебета", ПланыСчетов.Хозрасчетный.РасчетыСПерсоналомПоОплатеТруда);
        СтруктураАналитики.Вставить("СубконтоДебет", Получатель);
        СтруктураАналитики.Вставить("СодержаниеОперации", "Выплата заработной платы на счет сотрудника");        
	КонецЕсли;
	Возврат СтруктураАналитики;    
КонецФункции

Процедура ОбработкаПроведения(Отказ, Режим)
	Движения.ДенежныеСредства.Записывать = Истина;
	Движение = Движения.ДенежныеСредства.Добавить();
	Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
	Движение.Период = Дата;
	Движение.ТипДенежныхСредств = Перечисления.ТипыДенежныхСредств.Безналичные;
	Движение.БанковскийСчётКасса = РасчетныйСчет;
	Движение.Сумма = СуммаДокумента;
	//Бухгалтерия
	Движения.Хозрасчетный.Записывать = Истина;
	Если ВидОперации <> Перечисления.ВидыОперацийСписанияСРасчетногоСчета.СнятиеНаличныхВКассу Тогда	        
	    АналитикаПроводки = ПолучитьАналитикуПроводки();	        
	    Движение = Движения.Хозрасчетный.Добавить();
	    Движение.СчетДт = АналитикаПроводки.СчетДебета;
	    Движение.СчетКт = АналитикаПроводки.СчетКредита;
	    Движение.Период = Дата;
	    Движение.Сумма = СуммаДокумента;
	    Движение.Содержание = АналитикаПроводки.СодержаниеОперации;
	    БухгалтерскийУчет.ЗаполнитьСубконтоПоСчету(Движение.СчетДт, Движение.СубконтоДт, АналитикаПроводки.СубконтоДебет);
	    БухгалтерскийУчет.ЗаполнитьСубконтоПоСчету(Движение.СчетКт, Движение.СубконтоКт, АналитикаПроводки.СубконтоКредит);
	КонецЕсли;
	Движения.Записать();
	
	Движения.ДенежныеСредства.БлокироватьДляИзменения = Истина;
	//Проверка отстатков
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДенежныеСредстваОстатки.БанковскийСчётКасса.Представление КАК РасчетныйСчет,
	|	-ДенежныеСредстваОстатки.СуммаОстаток КАК Сумма
	|ИЗ
	|	РегистрНакопления.ДенежныеСредства.Остатки(
	|			&МоментВремени,
	|			БанковскийСчётКасса = &РасчетныйСчет
	|				И ТипДенежныхСредств = ЗНАЧЕНИЕ(Перечисление.ТипыДенежныхСредств.Безналичные)) КАК ДенежныеСредстваОстатки
	|ГДЕ
	|	ДенежныеСредстваОстатки.СуммаОстаток < 0";
	Запрос.УстановитьПараметр("РасчетныйСчет", РасчетныйСчет);
	Запрос.УстановитьПараметр("МоментВремени", Новый Граница(МоментВремени(), ВидГраницы.Включая));    
	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда
	    Отказ = Истина;
	    Выборка = РезультатЗапроса.Выбрать();
	    Выборка.Следующий();
	    Сообщение = Новый СообщениеПользователю;
	    Сообщение.Текст = СтрШаблон("На счете ""%1"" недостаточно денежных средств для расхода в размере %2", Выборка.РасчетныйСчет, Выборка.Сумма);
	    Сообщение.Сообщить();
	КонецЕсли;
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
    ТипДокументаОснования = ТипЗнч(ДанныеЗаполнения);
    ТипДокументаРеализацияТоваровИУслуг = Тип("ДокументСсылка.РеализацияТоваровИУслуг");
    ТипДокументаПоступлениеТоваровИМатериалов = Тип("ДокументСсылка.ПоступлениеТоваров");
    ТипДокументаПоступлениеУслуг = Тип("ДокументСсылка.ПоступлениеУслуг");
    ДанныеЗаполненияОснования = Новый Структура;   
    Если ТипДокументаОснования = ТипДокументаРеализацияТоваровИУслуг Тогда
        ДанныеЗаполненияОснования = ПолучитьДанныеПоРеализацииТоваровИУслуг(ДанныеЗаполнения);    
    ИначеЕсли ТипДокументаОснования = ТипДокументаПоступлениеТоваровИМатериалов Тогда 
        ДанныеЗаполненияОснования = ПолучитьДанныеПоПоступлениюТоваровИМатериалов(ДанныеЗаполнения);
    ИначеЕсли ТипДокументаОснования = ТипДокументаПоступлениеУслуг Тогда
        ДанныеЗаполненияОснования = ПолучитьДанныеПоПоступлениюУслуг(ДанныеЗаполнения);
    КонецЕсли;    
    ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеЗаполненияОснования);    
КонецПроцедуры

Функция ПолучитьДанныеПоРеализацииТоваровИУслуг(ДанныеЗаполнения) 
    Запрос = Новый Запрос; 
    Запрос.УстановитьПараметр("Ссылка", ДанныеЗаполнения);    
    Запрос.Текст =
    "ВЫБРАТЬ
    |	РеализацияТоваровИУслуг.Клиент КАК Получатель,
    |	РеализацияТоваровИУслуг.Сумма КАК СуммаДокумента,
    |	РеализацияТоваровИУслуг.Ссылка КАК ДокументОснование,
    |	ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСписанияСРасчетногоСчета.ВозвратПокупателю) КАК ВидОперации
    |ИЗ
    |	Документ.РеализацияТоваровИУслуг КАК РеализацияТоваровИУслуг
    |ГДЕ
    |	РеализацияТоваровИУслуг.Ссылка = &Ссылка";
    Выборка =  Запрос.Выполнить().Выбрать();
    Выборка.Следующий(); 
    Возврат Выборка;    
КонецФункции

Функция ПолучитьДанныеПоПоступлениюТоваровИМатериалов(ДанныеЗаполнения) 
    Запрос = Новый Запрос; 
    Запрос.УстановитьПараметр("Ссылка", ДанныеЗаполнения);
    Запрос.Текст =
    "ВЫБРАТЬ
    |	ПоступлениеТоваров.Поставщик КАК Получатель,
    |	ПоступлениеТоваров.ДоговорПоставщика КАК ДоговорКонтрагента,
    |	ПоступлениеТоваров.СуммаДокумента КАК СуммаДокумента,
    |	ПоступлениеТоваров.Ссылка КАК ДокументОснование,
    |	ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСписанияСРасчетногоСчета.ОплатаПоставщику) КАК ВидОперации
    |ИЗ
    |	Документ.ПоступлениеТоваров КАК ПоступлениеТоваров
    |ГДЕ
    |	ПоступлениеТоваров.Ссылка = &Ссылка";   
    Выборка =  Запрос.Выполнить().Выбрать();
    Выборка.Следующий(); 
    Возврат Выборка;
КонецФункции

Функция ПолучитьДанныеПоПоступлениюУслуг(ДанныеЗаполнения) 
    Запрос = Новый Запрос; 
    Запрос.УстановитьПараметр("Ссылка", ДанныеЗаполнения);
    Запрос.Текст =
    "ВЫБРАТЬ
    |    ПоступлениеУслуг.Поставщик КАК Получатель,
    |    ПоступлениеУслуг.ДоговорПоставщика КАК ДоговорКонтрагента,
    |    ПоступлениеУслуг.СуммаДокумента КАК СуммаДокумента,
    |    ПоступлениеУслуг.Ссылка КАК ДокументОснование,
    |    ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСписанияСРасчетногоСчета.ОплатаПоставщику) КАК ВидОперации
    |ИЗ
    |    Документ.ПоступлениеУслуг КАК ПоступлениеУслуг
    |ГДЕ
    |    ПоступлениеУслуг.Ссылка = &Ссылка";
    Выборка =  Запрос.Выполнить().Выбрать();
    Выборка.Следующий(); 
    Возврат Выборка;    
КонецФункции

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
    Если НЕ ЗначениеЗаполнено(АвторДокумента) Тогда
        АвторДокумента = ПараметрыСеанса.ТекущийПользователь; 
    КонецЕсли;
КонецПроцедуры