&НаКлиенте
Процедура ТоварКоличествоПриИзменении(Элемент)
	СтрокаТЧ = Элементы.Товар.ТекущиеДанные;
	РаботаСТабличнымиЧастямиКлиент.ПересчитатьСуммуВСтрТЧ(СтрокаТЧ);
КонецПроцедуры

&НаКлиенте
Процедура УслугиКоличествоПриИзменении(Элемент)
	СтрокаТЧ = Элементы.Услуги.ТекущиеДанные;
	РаботаСТабличнымиЧастямиКлиент.ПересчитатьСуммуВСтрТЧ(СтрокаТЧ);
КонецПроцедуры

&НаКлиенте
Процедура УслугиСкидкаПриИзменении(Элемент)
	СтрокаТЧ = Элементы.Услуги.ТекущиеДанные;
	Дата = ТекущаяДата();
	Номенклатура = СтрокаТЧ.Услуга;
	Если СтрокаТЧ.Скидка Тогда
		ТипЦены = ПредопределенноеЗначение("Перечисление.ТипыЦен.Скидка");
	Иначе
		ТипЦены = ПредопределенноеЗначение("Перечисление.ТипыЦен.Розничная");
	КонецЕсли;
	СтрокаТЧ.Цена = РаботаСЦенами.ЦенаНаДатуПродажи(Номенклатура, Дата, ТипЦены);
	РаботаСТабличнымиЧастямиКлиент.ПересчитатьСуммуВСтрТЧ(СтрокаТЧ);
КонецПроцедуры


&НаКлиенте
Процедура ТоварСкикдаПриИзменении(Элемент)
	СтрокаТЧ = Элементы.Товар.ТекущиеДанные;
	Дата = ТекущаяДата();
	Номенклатура = СтрокаТЧ.Товар;
	Если СтрокаТЧ.Скидка Тогда
		ТипЦены = ПредопределенноеЗначение("Перечисление.ТипыЦен.Скидка");
	Иначе
		ТипЦены = ПредопределенноеЗначение("Перечисление.ТипыЦен.Розничная");
	КонецЕсли;
	СтрокаТЧ.Цена = РаботаСЦенами.ЦенаНаДатуПродажи(Номенклатура, Дата, ТипЦены);
	РаботаСТабличнымиЧастямиКлиент.ПересчитатьСуммуВСтрТЧ(СтрокаТЧ);
КонецПроцедуры


&НаКлиенте
Процедура ТоварТоварПриИзменении(Элемент)
	СтрокаТЧ = Элементы.Товар.ТекущиеДанные;
	Номенклатура = СтрокаТЧ.Товар;
	Дата = ТекущаяДата();
	СтрокаТЧ.Количество = 0;
	
	Если СтрокаТЧ.Скидка Тогда
		ТипЦены = ПредопределенноеЗначение("Перечисление.ТипыЦен.Скидка");
	Иначе
		ТипЦены = ПредопределенноеЗначение("Перечисление.ТипыЦен.Розничная");
	КонецЕсли;
	
	Если ЗначениеЗаполнено(СтрокаТЧ.Товар) Тогда
		Если СтрокаТЧ.Количество >= 0 Тогда
			СтрокаТЧ.Цена = РаботаСЦенами.ЦенаНаДатуПродажи(Номенклатура, Дата, ТипЦены);
		Иначе
			Сообщить("Количество не может быть отрицательным!");
			СтрокаТЧ.Количество = 0;
			СтрокаТЧ.Цена = 0;
		КонецЕсли;
	КонецЕсли;
	РаботаСТабличнымиЧастямиКлиент.ПересчитатьСуммуВСтрТЧ(СтрокаТЧ);
КонецПроцедуры


&НаКлиенте
Процедура УслугиУслугаПриИзменении(Элемент)
	СтрокаТЧ = Элементы.Услуги.ТекущиеДанные;
	Номенклатура = СтрокаТЧ.Услуга;
	Дата = ТекущаяДата();
	СтрокаТЧ.Количество = 0;
	
	Если СтрокаТЧ.Скидка Тогда
		ТипЦены = ПредопределенноеЗначение("Перечисление.ТипыЦен.Скидка");
	Иначе
		ТипЦены = ПредопределенноеЗначение("Перечисление.ТипыЦен.Розничная");
	КонецЕсли;
	
	Если ЗначениеЗаполнено(СтрокаТЧ.Услуга) Тогда
		Если СтрокаТЧ.Количество >= 0 Тогда
			СтрокаТЧ.Цена = РаботаСЦенами.ЦенаНаДатуПродажи(Номенклатура, Дата, ТипЦены);
		Иначе
			Сообщить("Количество не может быть отрицательным!");
			СтрокаТЧ.Количество = 0;
			СтрокаТЧ.Цена = 0;
		КонецЕсли;
	КонецЕсли;
	РаботаСТабличнымиЧастямиКлиент.ПересчитатьСуммуВСтрТЧ(СтрокаТЧ);
КонецПроцедуры


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Объект.Ссылка.Пустая() Тогда
		ПризнакОплаты = Перечисления.ОплатаДокумента.НеОплачен;
	Иначе
		Если Объект.ПризнакОплаты <> Перечисления.ОплатаДокумента.ПолностьюОплачен Тогда
			СтруктураОплаты = Документы.РеализацияТоваровИУслуг.ПолучитьОплатуДокумента(Объект.Ссылка);
			ПризнакОплаты = СтруктураОплаты.ПризнакОплаты;
		КонецЕсли;
	КонецЕсли;
	
	//Если Параметры.Свойство("Основание")
	//	И ЗначениеЗаполнено(Параметры.Основание)
	//		И ТипЗнч(Параметры.Основание) = Тип("ДокументСсылка.ЗаписьКлиента") Тогда
	//	Если Параметры.Основание.УслугаОказана Тогда
	//        СообщениеПользователю = Новый СообщениеПользователю();
	//        СообщениеПользователю.Текст = "Данная услуга уже оказана";
	//		СообщениеПользователю.Сообщить();
	//	Отказ = Истина;
	//	КонецЕсли;
	//КонецЕсли;
КонецПроцедуры

