
Процедура Печать(ТабДок, Ссылка) Экспорт
	//{{_КОНСТРУКТОР_ПЕЧАТИ(Печать)
	Макет = Документы.РеализацияТоваровИУслуг.ПолучитьМакет("Печать");
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	РеализацияТоваровИУслуг.АвторДокумента,
	|	РеализацияТоваровИУслуг.Дата,
	|	РеализацияТоваровИУслуг.ДокументОснование,
	|	РеализацияТоваровИУслуг.Клиент,
	|	РеализацияТоваровИУслуг.Номер,
	|	РеализацияТоваровИУслуг.Сотрудник,
	|	РеализацияТоваровИУслуг.Сумма,
	|	РеализацияТоваровИУслуг.Услуги.(
	|		НомерСтроки,
	|		Услуга,
	|		Сумма
	|	),
	|	РеализацияТоваровИУслуг.Товар.(
	|		НомерСтроки,
	|		Товар,
	|		Количество,
	|		Сумма
	|	)
	|ИЗ
	|	Документ.РеализацияТоваровИУслуг КАК РеализацияТоваровИУслуг
	|ГДЕ
	|	РеализацияТоваровИУслуг.Ссылка В (&Ссылка)";
	Запрос.Параметры.Вставить("Ссылка", Ссылка);
	Выборка = Запрос.Выполнить().Выбрать();

	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	Шапка = Макет.ПолучитьОбласть("Шапка");
	ОбластьУслугиШапка = Макет.ПолучитьОбласть("УслугиШапка");
	ОбластьУслуги = Макет.ПолучитьОбласть("Услуги");
	ОбластьТоварШапка = Макет.ПолучитьОбласть("ТоварШапка");
	ОбластьТовар = Макет.ПолучитьОбласть("Товар");
	Подвал = Макет.ПолучитьОбласть("Подвал");

	ТабДок.Очистить();

	ВставлятьРазделительСтраниц = Ложь;
	Пока Выборка.Следующий() Цикл
		Если ВставлятьРазделительСтраниц Тогда
			ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;

		ТабДок.Вывести(ОбластьЗаголовок);

		Шапка.Параметры.Заполнить(Выборка);
		ТабДок.Вывести(Шапка, Выборка.Уровень());

		ВыборкаУслуги = Выборка.Услуги.Выбрать();
		Если ВыборкаУслуги.Количество() Тогда
			ТабДок.Вывести(ОбластьУслугиШапка);
			Пока ВыборкаУслуги.Следующий() Цикл
				ОбластьУслуги.Параметры.Заполнить(ВыборкаУслуги);
				ТабДок.Вывести(ОбластьУслуги, ВыборкаУслуги.Уровень());
			КонецЦикла;
		КонецЕсли;
		
		ВыборкаТовар = Выборка.Товар.Выбрать();
		Если ВыборкаТовар.Количество() Тогда
			ТабДок.Вывести(ОбластьТоварШапка);
			Пока ВыборкаТовар.Следующий() Цикл
				ОбластьТовар.Параметры.Заполнить(ВыборкаТовар);
				ТабДок.Вывести(ОбластьТовар, ВыборкаТовар.Уровень());
			КонецЦикла;
        КонецЕсли;
		Подвал.Параметры.Заполнить(Выборка);
		ТабДок.Вывести(Подвал);

		ВставлятьРазделительСтраниц = Истина;
	КонецЦикла;
	//}}
КонецПроцедуры

Функция ПолучитьОплатуДокумента(ДокументРТУ) Экспорт
	Запрос = Новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ
					|    СУММА(ПоступлениеДенежныхСредств.СуммаДокумента) КАК СуммаДокумента,
					|    ПоступлениеДенежныхСредств.ДокументОснование КАК ДокументОснование
					|ПОМЕСТИТЬ ВТ_Поступления
					|ИЗ
					|    Документ.ПоступлениеДенежныхСредств КАК ПоступлениеДенежныхСредств
					|ГДЕ
					|    ПоступлениеДенежныхСредств.ДокументОснование = &Ссылка
					|    И ПоступлениеДенежныхСредств.Проведен
					|
					|СГРУППИРОВАТЬ ПО
					|    ПоступлениеДенежныхСредств.ДокументОснование
					|;
					|
					|////////////////////////////////////////////////////////////////////////////////
					|ВЫБРАТЬ
					|    РеализацияТоваровИУслуг.Сумма - ЕСТЬNULL(ВТ_Поступления.СуммаДокумента, 0) КАК ОсталосьОплатить,
					|    ВЫБОР
					|        КОГДА РеализацияТоваровИУслуг.Сумма - ЕСТЬNULL(ВТ_Поступления.СуммаДокумента, 0) > 0
					|                И ЕСТЬNULL(ВТ_Поступления.СуммаДокумента, 0) > 0
					|            ТОГДА ЗНАЧЕНИЕ(Перечисление.ОплатаДокумента.ЧастичноОплачен)
					|        КОГДА ЕСТЬNULL(ВТ_Поступления.СуммаДокумента, 0) = 0
					|            ТОГДА ЗНАЧЕНИЕ(Перечисление.ОплатаДокумента.НеОплачен)
					|        ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ОплатаДокумента.ПолностьюОплачен)
					|    КОНЕЦ КАК ПризнакОплаты
					|ИЗ
					|    Документ.РеализацияТоваровИУслуг КАК РеализацияТоваровИУслуг
					|        ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Поступления КАК ВТ_Поступления
					|        ПО РеализацияТоваровИУслуг.Ссылка = ВТ_Поступления.ДокументОснование
					|ГДЕ
					|    РеализацияТоваровИУслуг.Ссылка = &Ссылка";
	Запрос.УстановитьПараметр("Ссылка", ДокументРТУ);
	
	СтруктураОтвета = Новый Структура;
	СтруктураОтвета.Вставить("ПризнакОплаты", Перечисления.ОплатаДокумента.НеОплачен);
	СтруктураОтвета.Вставить("ОсталосьОплатить", 0);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	ЗаполнитьЗначенияСвойств(СтруктураОтвета, Выборка);
	Возврат СтруктураОтвета;
КонецФункции
