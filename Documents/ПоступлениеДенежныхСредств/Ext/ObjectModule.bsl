Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	Если НЕ ЗначениеЗаполнено(АвторДокумента) Тогда
		АвторДокумента = ПараметрыСеанса.ТекущийПользователь;
	КонецЕсли;
КонецПроцедуры

Функция ПолучитьАналитикуПроводки()    
    ОплатаОтПокупателя = Перечисления.ВидыОперацийПоступленияДенег.ОплатаОтПокупателя;
    ВозвратОтПоставщика = Перечисления.ВидыОперацийПоступленияДенег.ВозвратОтПоставщика;
    ПолучениеНаличныхВБанке = Перечисления.ВидыОперацийПоступленияДенег.ПолучениеНаличныхВБанке;
    ВозвратОтПодотчетника = Перечисления.ВидыОперацийПоступленияДенег.ВозвратОтПодотчетника;    
    ОплатаПоКарте = Перечисления.ТипыДенежныхСредств.Безналичные;
    
    СтруктураАналитики = Новый Структура;
    СтруктураАналитики.Вставить("СчетДебета", ПланыСчетов.Хозрасчетный.Касса);
    СтруктураАналитики.Вставить("СубконтоДебет", Касса);
    Если ВидОперации = ОплатаОтПокупателя Тогда
        Если ТипДенежныхСредств = ОплатаПоКарте Тогда
            СтруктураАналитики.Вставить("СчетДебета", ПланыСчетов.Хозрасчетный.ПереводыВПути);
            СтруктураАналитики.Вставить("СубконтоДебет", ЭквайринговыйТерминал);
            СтруктураАналитики.Вставить("СодержаниеОперации", "Оплата от покупателя банковской картой");
        Иначе
            СтруктураАналитики.Вставить("СодержаниеОперации", "Оплата от покупателя наличными в кассу");
        КонецЕсли;
        СтруктураАналитики.Вставить("СчетКредита", ПланыСчетов.Хозрасчетный.РасчетыСПокупателями);
        СтруктураАналитики.Вставить("СубконтоКредит", Плательщик);
    ИначеЕсли ВидОперации = ВозвратОтПоставщика Тогда
        СтруктураАналитики.Вставить("СчетКредита", ПланыСчетов.Хозрасчетный.РасчетыСПоставщиками);
        СтруктураАналитики.Вставить("СодержаниеОперации", "Возврат от поставщика наличными в кассу");
        СтруктураАналитики.Вставить("СубконтоКредит", Плательщик);
    ИначеЕсли ВидОперации = ПолучениеНаличныхВБанке Тогда
        СтруктураАналитики.Вставить("СчетКредита", ПланыСчетов.Хозрасчетный.РасчетныеСчета);
        СтруктураАналитики.Вставить("СодержаниеОперации", "Получение наличных денег с расчетного счета в кассу");
        СтруктураАналитики.Вставить("СубконтоКредит", РасчетныйСчет);
    ИначеЕсли ВидОперации = ВозвратОтПодотчетника Тогда 
        СтруктураАналитики.Вставить("СчетКредита", ПланыСчетов.Хозрасчетный.РасчетыСПодотчетнымиЛицами);
        СтруктураАналитики.Вставить("СодержаниеОперации", "Возврат подотчетных средств"); 
        СтруктураАналитики.Вставить("СубконтоКредит", Плательщик);
    КонецЕсли;    
    Возврат СтруктураАналитики;
КонецФункции

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	Движения.ДенежныеСредства.Записывать = Истина;
	Движения.БезналичнаяОплата.Записывать = Истина;
	Движения.ДенежныеСредства.Записать();
	Движения.БезналичнаяОплата.Записать();

	Если ТипДенежныхСредств = Перечисления.ТипыДенежныхСредств.Наличные Тогда
	    Движения.ДенежныеСредства.Записывать = Истина;
	    Движение = Движения.ДенежныеСредства.Добавить();
	    Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
	    Движение.Период = Дата;
	    Движение.БанковскийСчётКасса = Касса;
	    Движение.ТипДенежныхСредств = ТипДенежныхСредств;
	    Движение.Сумма = СуммаДокумента;
	ИначеЕсли ТипДенежныхСредств = Перечисления.ТипыДенежныхСредств.Безналичные Тогда
	    Движения.БезналичнаяОплата.Записывать = Истина;
	    Движение = Движения.БезналичнаяОплата.Добавить();
	    Движение.Период = Дата;
	    Движение.ЭквайринговыйТерминал = ЭквайринговыйТерминал;
	    Движение.Сумма = СуммаДокумента;
	Иначе
		Отказ = Истина;
	КонецЕсли;                                      
	
	АналитикаПроводки = ПолучитьАналитикуПроводки();   
	
	Движения.Хозрасчетный.Записывать = Истина;      
	Движение = Движения.Хозрасчетный.Добавить();
	Движение.СчетДт = АналитикаПроводки.СчетДебета;
	Движение.СчетКт = АналитикаПроводки.СчетКредита;
	Движение.Период = Дата;
	Движение.Сумма = СуммаДокумента;
	Движение.Содержание = АналитикаПроводки.СодержаниеОперации;
	БухгалтерскийУчет.ЗаполнитьСубконтоПоСчету(Движение.СчетДт, Движение.СубконтоДт, АналитикаПроводки.СубконтоДебет);
	БухгалтерскийУчет.ЗаполнитьСубконтоПоСчету(Движение.СчетКт, Движение.СубконтоКт, АналитикаПроводки.СубконтоКредит);
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.РеализацияТоваровИУслуг") Тогда
		ДанныеДокументаОснования = ПолучитьДанныеПоОплатеПоРеализацииТоваров(ДанныеЗаполнения);
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеДокументаОснования);
	КонецЕсли;
КонецПроцедуры 

Функция ПолучитьДанныеПоОплатеПоРеализацииТоваров(ДанныеЗаполнения)
	Запрос = Новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ
	               |	РеализацияТоваровИУслуг.Клиент КАК Плательщик,
	               |	РеализацияТоваровИУслуг.ДокументОснование КАК ДокументОснование,
	               |	РеализацияТоваровИУслуг.Сумма КАК СуммаДокумента
	               |ИЗ
	               |	Документ.РеализацияТоваровИУслуг КАК РеализацияТоваровИУслуг
	               |ГДЕ
	               |	РеализацияТоваровИУслуг.Ссылка = &Ссылка";	
	Запрос.УстановитьПараметр("Ссылка", ДанныеЗаполнения);
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	Возврат Выборка;
КонецФункции;

