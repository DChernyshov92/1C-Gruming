&НаСервере
Процедура ЗаполнитьДанныеНаСервере()
	ЗаполнитьЧисловыеПоказатели();
	ЗаполнитьГистограммы();
	ЗаполнитьКруговыеДиаграммы();
КонецПроцедуры

&НаКлиенте
Процедура Обновить(Команда)    
    ЗаполнитьДанныеНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
    ПериодОбработки = НачалоМесяца(ТекущаяДата());
    МесяцСтрокой = Формат(ПериодОбработки, "ДФ='ММММ гггг'");
    ЗаполнитьДанныеНаСервере();
	ДатаЗагрузки = Текущаядата();
	ПолучитьКурсыВалютПоДаннымЦентробанкаНаСервере();
	КоличествоНовостей = 10;
	СтрокаПоиска = "Бизнес";
	ЯзыкПоиска = "ru";	
КонецПроцедуры

&НаКлиенте
Процедура МесяцСтрокойНажатие(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь; 
    Подсказка = "Введите период получения данных";
    ЧастьДаты = ЧастиДаты.Дата;
    Оповещение = Новый ОписаниеОповещения("ПослеВводаПериода",ЭтотОбъект);
    ПоказатьВводДаты(Оповещение, ПериодОбработки, Подсказка, ЧастьДаты); 
КонецПроцедуры

&НаКлиенте
Процедура ПослеВводаПериода(Результат, ДополнительныеПараметры) Экспорт    
    Если Результат<> Неопределено Тогда
        ПериодОбработки = НачалоМесяца(Результат);
        МесяцСтрокой = Формат(ПериодОбработки, "ДФ='ММММ гггг'");
    КонецЕсли;    
    ЗаполнитьДанныеНаСервере();
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьЧисловыеПоказатели()    
	Запрос = Новый Запрос;
	
	Запрос.Текст=
	"ВЫБРАТЬ
	|    ПродажиОбороты.Регистратор КАК Регистратор,
	|    ПродажиОбороты.СуммаОборот КАК СуммаОборот,
	|    ПродажиОбороты.КоличествоОборот КАК КоличествоОборот
	|ПОМЕСТИТЬ ВТ_Продажи
	|ИЗ
	|    РегистрНакопления.Продажи.Обороты(&ДатаНачала, &ДатаОкончания, Регистратор, ) КАК ПродажиОбороты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|    СУММА(ВТ_Продажи.СуммаОборот) КАК СуммаОборот
	|ИЗ
	|    ВТ_Продажи КАК ВТ_Продажи
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|    СУММА(ВТ_Продажи.СуммаОборот) КАК СуммаОборот,
	|    КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВТ_Продажи.Регистратор) КАК Регистратор
	|ПОМЕСТИТЬ ВТ_КоличествоРегистраторов
	|ИЗ
	|    ВТ_Продажи КАК ВТ_Продажи
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|    ВЫБОР
	|        КОГДА ВТ_КоличествоРегистраторов.Регистратор = 0
	|            ТОГДА 0
	|        ИНАЧЕ ВЫРАЗИТЬ(ВТ_КоличествоРегистраторов.СуммаОборот / ВТ_КоличествоРегистраторов.Регистратор КАК ЧИСЛО(10, 2))
	|    КОНЕЦ КАК СреднийЧек
	|ИЗ
	|    ВТ_КоличествоРегистраторов КАК ВТ_КоличествоРегистраторов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|    ЗаказыКлиентов.Регистратор КАК Регистратор
	|ПОМЕСТИТЬ ВТ_ЗаписиКлиентов
	|ИЗ
	|    РегистрНакопления.ЗаказыКлиентов КАК ЗаказыКлиентов
	|ГДЕ
	|    ЗаказыКлиентов.Период МЕЖДУ &ДатаНачала И &ДатаОкончания
	|    И ЗаказыКлиентов.Регистратор ССЫЛКА Документ.ЗаписьКлиента
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|    КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВТ_ЗаписиКлиентов.Регистратор) КАК КоличествоЗаписейКлиентов
	|ИЗ
	|    ВТ_ЗаписиКлиентов КАК ВТ_ЗаписиКлиентов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|    КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВТ_ЗаписиКлиентов.Регистратор) КАК Завершенных
	|ИЗ
	|    ВТ_ЗаписиКлиентов КАК ВТ_ЗаписиКлиентов
	|        ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровИУслуг КАК РеализацияТоваровИУслуг
	|        ПО ВТ_ЗаписиКлиентов.Регистратор = РеализацияТоваровИУслуг.ДокументОснование
	|ГДЕ
	|    РеализацияТоваровИУслуг.Проведен";
    Запрос.УстановитьПараметр("ДатаНачала", ПериодОбработки);
	Запрос.УстановитьПараметр("ДатаОкончания", КонецМесяца(ПериодОбработки));
	ВсегоЗаписей = 0;

	РезультатПакет = Запрос.ВыполнитьПакет();
	ВыборкаПродажи = РезультатПакет[1].Выбрать();
	Если ВыборкаПродажи.Следующий() Тогда
	    ВыручкаЧисло = ВыборкаПродажи.СуммаОборот;
	КонецЕсли;
	ВыборкаСреднийЧек = РезультатПакет[3].Выбрать();
	Если ВыборкаСреднийЧек.Следующий() Тогда
	    СреднийЧек = ВыборкаСреднийЧек.СреднийЧек;
	КонецЕсли;
 	ВыборкаЗаписиКлиентов = РезультатПакет[5].Выбрать();
	Если ВыборкаЗаписиКлиентов.Следующий() Тогда
	    ВсегоЗаписей = ВыборкаЗаписиКлиентов.КоличествоЗаписейКлиентов;
	КонецЕсли;
	ВыборкаЗаписиКлиентовЗавершенные = РезультатПакет[6].Выбрать();
	Если ВыборкаЗаписиКлиентовЗавершенные.Следующий() Тогда
	    Завершенных = ВыборкаЗаписиКлиентовЗавершенные.Завершенных;
		Если ВсегоЗаписей> 0 Тогда
	        ПроцентЗавершенных = ОКР((100*Завершенных/ВсегоЗаписей),2);
	        ЗавершенныхПроцентСтрока = СтрШаблон("Это %1 процентов от всех записей", ПроцентЗавершенных); 
	  	Иначе
	        ЗавершенныхПроцентСтрока = "В этом периоде нет записей клиентов!";
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьГистограммы()
	Запрос = Новый Запрос;
	Запрос.Текст =
	        "ВЫБРАТЬ
	        |    НачалоПериода(Продажи.Период, День) КАК Период,
	        |    Продажи.СуммаОборот КАК СуммаОборот
	        |ИЗ
	        |    РегистрНакопления.Продажи.Обороты(&ДатаНачала, &ДатаОкончания, Регистратор, ) КАК Продажи
	        |
	        |УПОРЯДОЧИТЬ ПО
	        |    Период
	        |ИТОГИ
	        |    СУММА(СуммаОборот)
	        |ПО
	        |    Период ПЕРИОДАМИ(ДЕНЬ, &ДатаНачала, &ДатаОкончания)";

	Запрос.УстановитьПараметр("ДатаНачала", ПериодОбработки);
	Запрос.УстановитьПараметр("ДатаОкончания", КонецМесяца(ПериодОбработки));

	ДиаграммаВыручка.Обновление = Ложь;
	ДиаграммаВыручка.Очистить();

	Серия = ДиаграммаВыручка.Серии.Добавить("Оборот");Серия.Цвет = WebЦвета.ЛососьСветлый;

	Выборка = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Период", "Все");
	Пока Выборка.Следующий() Цикл
	    Точка = ДиаграммаВыручка.Точки.Добавить(Выборка.Период);
	    Точка.Текст = Формат(Выборка.Период, "ДФ=dd.MM.yy");
	    Точка.Расшифровка = Выборка.Период;
	    Подсказка = "Выручка " + Выборка.СуммаОборот + " на " + Формат(Выборка.Период, "ДФ=dd.MM.yyyy"); 
	    ДиаграммаВыручка.УстановитьЗначение(Точка, Серия, Выборка.СуммаОборот, Точка.Расшифровка, Подсказка);
	КонецЦикла;
	ДиаграммаВыручка.Обновление = Истина;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьКруговыеДиаграммы()
	ЗаполнитьДиаграммуПоИсточникамИнформации();
	ЗаполнитьДиаграммуПоСотрудникам();
	ЗаполнитьДиаграммуПоУслугам();
КонецПроцедуры

Процедура ЗаполнитьДиаграммуПоУслугам()
	Запрос = Новый Запрос;
	Запрос.Текст =
	    "ВЫБРАТЬ
	    |    Продажи.Товар КАК Номенклатура,
	    |    СУММА(Продажи.СуммаОборот) КАК СуммаОборот
	    |ПОМЕСТИТЬ ВТ_КонкретныеУслуги
	    |ИЗ
	    |    РегистрНакопления.Продажи.Обороты(&ДатаНачала, &ДатаОкончания, Регистратор, Товар.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)) КАК Продажи
	    |ГДЕ
	    |    Продажи.КоличествоОборот <> 0
	    |
	    |СГРУППИРОВАТЬ ПО
	    |    Продажи.Товар
		|;
	    |
	|////////////////////////////////////////////////////////////////////////////////
	    |ВЫБРАТЬ
	    |    СУММА(ПродажиОбороты.СуммаОборот) КАК СуммаОборот
	    |ПОМЕСТИТЬ ВТ_ВсеПродажи
	    |ИЗ
	    |    РегистрНакопления.Продажи.Обороты(&ДатаНачала, &ДатаОкончания, Регистратор, Товар.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)) КАК ПродажиОбороты
	    |;
	    |
	|////////////////////////////////////////////////////////////////////////////////
	    |ВЫБРАТЬ
	    |    ВТ_КонкретныеУслуги.Номенклатура КАК Номенклатура,
	    |    ВТ_КонкретныеУслуги.СуммаОборот КАК СуммаПродажНоменклатуры,
	    |    ВТ_ВсеПродажи.СуммаОборот КАК ОбщаяСуммаПоУслугам
	    |ПОМЕСТИТЬ ВТ_Предытог
	    |ИЗ
	    |    ВТ_КонкретныеУслуги КАК ВТ_КонкретныеУслуги
	    |        ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ВсеПродажи КАК ВТ_ВсеПродажи
	    |        ПО (ИСТИНА)
	    |;
	    |
	|////////////////////////////////////////////////////////////////////////////////
	    |ВЫБРАТЬ
	    |    ВЫБОР
	    |        КОГДА 100 * ВТ_Предытог.СуммаПродажНоменклатуры / ВТ_Предытог.ОбщаяСуммаПоУслугам > 10
	    |            ТОГДА ВТ_Предытог.Номенклатура.Представление
	    |        ИНАЧЕ ""Прочее""
	    |    КОНЕЦ КАК Номенклатура,
	    |    СУММА(ВТ_Предытог.СуммаПродажНоменклатуры) КАК Сумма
	    |ИЗ
	    |    ВТ_Предытог КАК ВТ_Предытог
	    |
	    |СГРУППИРОВАТЬ ПО
	    |    ВЫБОР
	    |        КОГДА 100 * ВТ_Предытог.СуммаПродажНоменклатуры / ВТ_Предытог.ОбщаяСуммаПоУслугам > 10
	    |            ТОГДА ВТ_Предытог.Номенклатура.Представление
	    |        ИНАЧЕ ""Прочее""
	    |    КОНЕЦ";
	Запрос.УстановитьПараметр("ДатаНачала", ПериодОбработки);
	Запрос.УстановитьПараметр("ДатаОкончания", КонецМесяца(ПериодОбработки));

	ДиаграммаПоУслугам.Обновление = Ложь;
	ДиаграммаПоУслугам.Очистить();

	Точка = ДиаграммаПоУслугам.Точки.Добавить("Сумма"); 
	Точка.Текст = "Сумма";
	Точка.ПриоритетЦвета = Ложь;

	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
	    Серия = ДиаграммаПоУслугам.Серии.Добавить(Выборка.Номенклатура);
	    ДиаграммаПоУслугам.УстановитьЗначение(Точка, Серия, Выборка.Сумма, Строка(Выборка.Сумма));
	КонецЦикла;
	ДиаграммаПоУслугам.Обновление = Истина;
КонецПроцедуры

Процедура ЗаполнитьДиаграммуПоИсточникамИнформации()
	Запрос = Новый Запрос;
	Запрос.Текст =
	    "ВЫБРАТЬ
	    |    ЕСТЬNULL(Продажи.Клиент.ИсточникИнформации.Представление, ""Не указан"") КАК ИсточникИнформации,
	    |    СУММА(Продажи.КоличествоОборот) КАК Количество
	    |ИЗ
	    |    РегистрНакопления.Продажи.Обороты(&ДатаНачала, &ДатаОкончания, Регистратор, ) КАК Продажи
	    |ГДЕ
	    |    Продажи.КоличествоОборот <> 0
	    |
	    |СГРУППИРОВАТЬ ПО
	    |    ЕСТЬNULL(Продажи.Клиент.ИсточникИнформации.Представление, ""Не указан"")";
	Запрос.УстановитьПараметр("ДатаНачала", ПериодОбработки);
	Запрос.УстановитьПараметр("ДатаОкончания", КонецМесяца(ПериодОбработки));

	ДиаграммаПоРекламнымИсточникам.Обновление = Ложь;
	ДиаграммаПоРекламнымИсточникам.Очистить();

	Точка = ДиаграммаПоРекламнымИсточникам.Точки.Добавить("Количество");
	Точка.Текст = "Количество";
	Точка.ПриоритетЦвета = Ложь;

	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
	    Серия = ДиаграммаПоРекламнымИсточникам.Серии.Добавить(Выборка.ИсточникИнформации);
	    ДиаграммаПоРекламнымИсточникам.УстановитьЗначение(Точка, Серия, Выборка.Количество, Строка(Выборка.Количество));
	КонецЦикла;
	ДиаграммаПоРекламнымИсточникам.Обновление = Истина;
КонецПроцедуры

Процедура ЗаполнитьДиаграммуПоСотрудникам()
	Запрос = Новый Запрос;
	Запрос.Текст =
	    "ВЫБРАТЬ
	    |    СУММА(Продажи.СуммаОборот) КАК Сумма,
	    |    Продажи.Сотрудник КАК Сотрудник
	    |ИЗ
	    |    РегистрНакопления.Продажи.Обороты(&ДатаНачала, &ДатаОкончания, Регистратор, ) КАК Продажи
	    |ГДЕ
	    |    Продажи.КоличествоОборот <> 0
	    |
	    |СГРУППИРОВАТЬ ПО
	    |    Продажи.Сотрудник";
	Запрос.УстановитьПараметр("ДатаНачала", ПериодОбработки);
	Запрос.УстановитьПараметр("ДатаОкончания", КонецМесяца(ПериодОбработки));

	ДиаграммаВыручкаПоСотрудникам.Обновление = Ложь;
	ДиаграммаВыручкаПоСотрудникам.Очистить();

	Точка = ДиаграммаВыручкаПоСотрудникам.Точки.Добавить("Сумма");
	Точка.Текст = "Сумма";
	Точка.ПриоритетЦвета = Ложь;

	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
	    Серия = ДиаграммаВыручкаПоСотрудникам.Серии.Добавить(Выборка.Сотрудник.Ссылка.Наименование);
	    ДиаграммаВыручкаПоСотрудникам.УстановитьЗначение(Точка, Серия, Выборка.Сумма, Строка(Выборка.Сумма));
	КонецЦикла;
	ДиаграммаВыручкаПоСотрудникам.Обновление = Истина;
КонецПроцедуры


&НаСервере
Процедура ПолучитьКурсыВалютПоДаннымЦентробанкаНаСервере()
	Сервер = "cbr.ru";
	АдресЗапроса = "/scripts/XML_daily.asp?date_req=" + Формат(ДатаЗагрузки, "ДФ=dd/MM/yyyy");	
	ВозвращаемоеЗначение = РаботаСHTTP.ПолучитьДанныеИзСервиса(Сервер, АдресЗапроса);
	
	Если ВозвращаемоеЗначение.УспешныйЗапрос = Ложь Тогда 
		Сообщить(ВозвращаемоеЗначение.ТекстОшибки);
		Возврат;
	ИначеЕсли ВозвращаемоеЗначение.HTTPОтвет.КодСостояния <> 200 Тогда
		Сообщить(СтрШаблон("Код вернул код состояния, отличный от 200: %1", ВозвращаемоеЗначение.HTTPОтвет.КодСостояния));
		Возврат;
	КонецЕсли;
	
	СтрокаXML = ВозвращаемоеЗначение.HTTPОтвет.ПолучитьТелоКакСтроку();
	ПрочитатьИзXMLПоследовательно(СтрокаXML);	
КонецПроцедуры

&НаСервере
Процедура ПрочитатьИзXMLПоследовательно(СтрокаXML)
	ЧтениеXML = Новый ЧтениеXML;
	ЧтениеXML.УстановитьСтроку(СтрокаXML);
	Валюта = Неопределено;
	Пока ЧтениеXML.Прочитать() Цикл
		Если ЧтениеXML.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда
			НужнаяВалюта = Ложь;
			Пока ЧтениеXML.ПрочитатьАтрибут() Цикл				Если  ЧтениеXML.Имя = "ID" И ЧтениеXML.Значение = "R01235" Тогда
					Валюта = "USD";
				ИначеЕсли ЧтениеXML.Имя = "ID" И ЧтениеXML.Значение = "R01239" Тогда
					Валюта = "EURO";
				ИначеЕсли ЧтениеXML.Имя = "ID" И ЧтениеXML.Значение = "R01335" Тогда
					Валюта = "KZT";
				Иначе
					Валюта = Неопределено;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		Если Валюта <> Неопределено
			И ЧтениеXML.ТипУзла = ТипУзлаXML.НачалоЭлемента
			И ЧтениеXML.Имя = "VunitRate" Тогда
			ЧтениеXML.Прочитать();
			Если Валюта = "USD" Тогда
				КурсДоллараНаСегодня = ЧтениеXML.Значение;
			ИначеЕсли Валюта = "EURO" Тогда
				КурсЕвроНаСегодня = ЧтениеXML.Значение;
			ИначеЕсли Валюта = "KZT" Тогда
				КурсТенгеНаСегодня = ЧтениеXML.Значение * 100;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	ЧтениеXML.Закрыть();
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьКурсыВалютИНовости(Команда)
	ПолучитьКурсыВалютПоДаннымЦентробанкаНаСервере();
	ЗагрузитьНовостиНаСервере();
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьНовостиНаСервере()
	Объект.ТопНовости = "";
	
	Сервер = "newsapi.org"; 
	АдресЗапроса = "/v2/everything";
	ПараметрыЗапроса = СтрШаблон("apiKey=%1&sortBy=popularity&from=%2&language=%4&q=%3", СокрЛП(Константы.API_KEY_newsapi.Получить()),
	Формат(ДатаЗагрузки, "ДФ=yyyy-dd-MM"), СокрЛП(СтрокаПоиска), ЯзыкПоиска);
	
	АдресЗапроса = АдресЗапроса + "?" + ПараметрыЗапроса;
	//Сообщить(АдресЗапроса);
	ВозвращаемоеЗначение = РаботаСHTTP.ПолучитьДанныеИзСервиса(Сервер, АдресЗапроса);	
	Если ВозвращаемоеЗначение.УспешныйЗапрос = Ложь Тогда
		Сообщить(ВозвращаемоеЗначение.ТекстОшибки);
		возврат;
	ИначеЕсли ВозвращаемоеЗначение.HTTPОтвет.КодСостояния <> 200 Тогда
		Сообщить(СтрШаблон("Код вернул код состояния, отличный от 200: %1", ВозвращаемоеЗначение.HTTPОтвет.КодСостояния));
		возврат;
	КонецЕсли;
	
	СтрокаJSON = ВозвращаемоеЗначение.HTTPОтвет.ПолучитьТелоКакСтроку();	
	ЧтениеJSON = Новый ЧтениеJSON;
	ЧтениеJSON.УстановитьСтроку(СтрокаJSON);
	Новости = ПрочитатьJSON(ЧтениеJSON, Ложь);
	ЧтениеJSON.Закрыть();
	
	Итератор = 1;
	
	Если Новости <> Неопределено Тогда
		Для Каждого Статья Из Новости.articles Цикл
			Объект.ТопНовости = Объект.ТопНовости + Строка(Итератор) + ") " + "Источник: " + Статья.url + Символы.ПС + Статья.title + Символы.ПС;
			Объект.ТопНовости = Объект.ТопНовости + Статья.description + Символы.ПС + Символы.ПС;
			Если Итератор = КоличествоНовостей Тогда
				Прервать;
			КонецЕсли;
			Итератор = Итератор + 1;
		КонецЦикла;
	Конецесли;	
КонецПроцедуры
